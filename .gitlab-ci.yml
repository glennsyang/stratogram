image: node:10.18.0

stages:
  - build
  - deploy

cache:
  paths:
    - node_modules/

buildGatsby:
  stage: build
  script:
    - yarn install
    - ./node_modules/.bin/gatsby build --prefix-paths
  # specify the artifacts to save
  artifacts:
    paths:
      - public
  only:
    - release
    
deployGatsby:
  stage: deploy
  only:
  - release
  dependencies:
  - buildGatsby
  script:
  # Check for ssh-agent + rsync and install if not present
  - "which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y  )"
  - "which rsync || ( apt-get update -y && apt-get install rsync -y )"
  - eval $(ssh-agent -s)
  # Inject the remote's private key
  - ssh-add <(echo "$SSH_PRIVATE_KEY" | base64 --decode)
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  # Append keyscan output into known hosts
  - ssh-keyscan $SERVER_IP >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts
  - rsync -avzh --delete public/* $SERVER_USER@$SERVER_IP:/var/www/stratogram.ca/html
  
  # 3. https://github.com/actions/setup-node#usage
      #- uses: actions/setup-node@master
      #  with:
      #  node-version: 10.x
      #- name: create file
      #  env:
      #    remote_key: ${{ secrets.SSH_PRIVATE_KEY }}
      #  run: echo "$remote_key" > ~/.ssh/gh_actions_key
      
      - name: secure file
        run: chmod 600 ~/.ssh/gh_actions_key
      - name: Send files to server
        env:
          remote_host: ${{ secrets.SERVER_IP }}
          remote_user: ${{ secrets.SERVER_USER }}
        run: rsync -avzh --delete "ssh -i ~/.ssh/gh_actions_key -o StrictHostKeyChecking=no" public/* ${remote_user}@${remote_host}:/var/www/stratogram.ca/html


- name: SSH Add
        env:
          remote_key: ${{ secrets.SSH_PRIVATE_KEY }}
        run: ssh-add <(echo ${remote_key} | base64 --decode)
      - name: Secure dir
        run: | 
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
      - name: Keyscan
        env:
          remote_host: ${{ secrets.SERVER_IP }}
        run: ssh-keyscan ${remote_host} >> ~/.ssh/known_hosts
      - name: Secure file
        run: chmod 644 ~/.ssh/known_hosts
      - name: Deploy to server
        env:
          remote_host: ${{ secrets.SERVER_IP }}
          remote_user: ${{ secrets.SERVER_USER }}
        run: rsync -avzh --delete public/* ${remote_user}@${remote_host}:/var/www/stratogram.ca/html

ssh-add - <<< "${{ secrets.SSH_PRIVATE_KEY }}" | base64 --decode
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh